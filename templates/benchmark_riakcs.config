#jinja2:variable_start_string:'(<' , variable_end_string:'>)'
%% Sample config file for Riak CS basho_bench benchmarking

%% About rate limiting via the `mode` setting: the `mode` rate is
%% valid for the basho_bench_driver_cs plugin for `get` operations.
%% The `mode` rate does *not* apply to `insert` operations.
%% The driver does *not* support `update` operations

{mode, {rate, (< bashobench_rate >) }}.

{duration, (< bashobench_duration >) }.

{concurrent, (< bashobench_concurrent >) }.

{report_interval, 10}.

{driver, basho_bench_driver_cs}.

{% set adapter = 'ansible_' + riak_iface  %}

{% set key_generator = '{int_to_str, {' + bashobench_keygen + ', ' + bashobench_key_start_int|string + ', ' + bashobench_key_count|string + '}}' %}
{% set operations = "[{" + bashobench_operations + ", 1}]" %}

%% Replace this with a user you have created.
%% Instructions to create a user are here:
%% https://github.com/basho/riak_cs/wiki/Creating-a-User
{% if riakcs_admin_creds is defined %}
{cs_access_key, "(< riakcs_admin_creds.key >)" }.
{cs_secret_key, "(< riakcs_admin_creds.secret >)" }.
{cs_bucket, "(< benchmark_suite_set >)"}. % create this with s3cmd before running basho_bench!
{cs_disconnect_frequency, 5}.    % # ops before disconnecting HTTP socket
{cs_raw_ip, "(< s3client_host_base >)"}. % DO NOT CHANGE
{cs_raw_port, 80}.         % DO NOT CHANGE
%% Replace these with your HTTP proxy's location (i.e. Riak CS)
{cs_http_proxy_host, [{% for server in groups[bashobench_cluster_group] %}{ (< hostvars[server][adapter].ipv4.address|replace(".",",") >) }{% if not loop.last %},{% endif %}{% endfor %}]}.
{cs_http_proxy_port, (< s3client_proxy_port >) }.
{cs_request_timeout, 999999000}.
% If using the cs_measurement_units option, you need to change
% any R graph's labels of the Y axis, e.g. basho_bench's Makefile target
% "make mbyte_sec-results"
{cs_measurement_units, mbyte_sec}.
{% endif %}

{key_generator, (< key_generator >)}.

%% See comments in source code for bigfile_valgen() function for full
%% explanation of the proplist below.
{value_generator, {function, basho_bench_driver_cs, bigfile_valgen,
                  [[{file_size, (< bashobench_value_bs >)},
                    {ibrowse_chunk_size, 1000000},
                    {max_rate_per_chunk, 100}]]}}.

%% NOTE: It's not a good idea to mix insert & get ops in a single
%%       basho_bench instance with this driver.
%%       Use separate ones instead!
%% bad idea: {operations, [{insert, 1}, {get, 1}]}.
{operations, (< operations >)}.
